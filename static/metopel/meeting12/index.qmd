---
title: "Beginner Data Viz"
subtitle: "Pertemuan 12"
author: "Metodologi penelitian"
format: 
  revealjs:
    theme: [simple,../mytheme.scss]
    chalkboard: true
    incremental: false
    transition: convex
    background-transition: fade
    slide-number: true
---

## Hari ini

- Menggambar dengan ggplot

    - scatter untuk cross section
    
    - garis untuk time series dan panel
    

## Kenapa dataviz

- Dataviz (kependekan dari data visualization) merupakan teknik yang digunakan untuk mempresentasikan data dalam bentuk yang lebih _user friendly_ atau lebih enak dilihat oleh manusia.

- Dataviz ga ada gunanya untuk regresi di R. Fungsinya simply untuk komunikasi dengan manusia.

- Seringkali, dataviz bahkan lebih penting dari analisis regresi!

## Step dataviz

- Cari datanya dulu! Apa yang mau di-viz-in kalo datanya gak ada?

- Tentukan viz yang paling cocok.

- Koneksikan viz dengan cerita/narasi tulisan anda!

> A picture worth a thousand words!

## Fungsi umum dataviz {.m}

- menunjukkan hubungan dua atau lebih data untuk analisis awal

    - hubungan seperti ini ujung-ujungnya harus menggunakan regresi.
    
- Menunjukkan tren / growth / perubahan data poin sepanjang waktu.

    - misalnya nilai tukar dari bulan ke bulan apakah stabil, naik, atau turun.
    
    - perubahan harga, perubahan PDB, dan lain-lain
    
- Menunjukkan fraction/berapa besar data 1 observasi dibandingkan total.

    - seberapa besar ekspor batubara dibanding keseluruhan ekspor Indonesia?
    
## Tools

- Tools paling standard adalah microsoft excel!

- R punya native command `plot` tapi fungsinya agak terbatas, terutama untuk time series.

- Di R, penggunaan `ggplot` sangat disarankan.

    - `ggplot` merupakan bagian dari package `tidyverse`
    
    - install dan liberary `tidyverse` sudah cukup untuk memakai ggplot
    
## Excel

![explore di tab "insert"](gambar1.jpg)

## ggplot

- Untuk pengguna R, ggplot merupakan pilihan favorit, terutama jika anda menggunakan api call via R seperti `WDI`

- ggplot jauh lebih versatile daripada `plot`, dapat langsung diinput di .qmd, tapi juga bisa disave ke .png untuk digunakan di word.

- Namun sedikit problemnya adalah syntax-nya ggplot agak ribet.

## Syntax ggplot

- Di kuliah ini, anda akan diberikan kode yang bisa tinggal copy-paste.

- Namun untuk bisa menguasai ggplot dengan penuh, anda perlu kuliah sendiri tentang dataviz, atau bisa juga otodidak (seperti saya)

- Ada banyak buku untuk belajar ggplot yang gratis, juga course online.

- Jika anda sudah paham syntaxnya, maka mengandalkan google saja cukup (seperti saya)

## Syntax dasar

- syntax dasar ggplot dibuka denga command ggplot(data,aes()) dan diikuti tanda tambah.

- command `ggplot()` berfungsi untuk menginformasikan ke R bahwa anda ingin memulai gambar dengan data ini.

- kita akan coba contoh yang cocok dengan cross section

## Data {.scrollable}

Data ini sama dengan di pertemuan 1, yaitu data cross-section.

```{r}
#| echo: true
library(WDI)
library(tidyverse)

indi<-c(            # membuat dictionary
  "PDB"="NY.GDP.MKTP.CD",
  "import"="NE.IMP.GNFS.CD"
)

dat<-WDI(           # Menarik data World Bank
  country="all",
  indicator=indi,
  start=2019,end=2019,
)

dat
```

## ggplot

- Kita declare dulu dengan ggplot:

```r
ggplot(data=dat,aes(x=PDB,y=import))
```

- Ini akan memberi tahu ggplot bahwa kita ingin membuat grafik dari data "dat", di mana PDB jadi x-nya dan import jadi y-nya.

- Tapi ini saja tidak cukup. Anda harus secara eksplisit memberi tahu bahwa anda ingin membuat titik (scatterplot). Tambahkan `+ geom_point()` di belakangnya.

## geom_point

```{r}
#| echo: true
ggplot(data=dat,aes(x=PDB,y=import)) +
  geom_point()
```

## Memberi judul {.m}

Untuk memberi label di sumbu X, Y dan judul tabel, anda dapat menggunakan `labs`

```{r}
#| echo: true
ggplot(data=dat,aes(x=PDB,y=import)) +
  geom_point() + # setiap nambah command, selalu kasih tanda +
  labs(title="tabel 1. hubungan antara impor dan PDB",
       x="Produk Domestik Bruto, current US$ million",
       y="Nilai impor, current US$ million",
       caption = "sumber: World Development Indicators, World Bank") # yang terakhir ga perlu +
```



## Theme BW

```{r}
#| echo: true
ggplot(data=dat,aes(x=PDB,y=import)) +
  geom_point() + # setiap nambah command, selalu kasih tanda +
  labs(title="tabel 1. hubungan antara impor dan PDB",
       x="Produk Domestik Bruto, current US$ million",
       y="Nilai impor, current US$ million",
       caption = "sumber: World Development Indicators, World Bank") +
  theme_bw()
  
```

## Theme Classic

```{r}
#| echo: true
ggplot(data=dat,aes(x=PDB,y=import)) +
  geom_point() + # setiap nambah command, selalu kasih tanda +
  labs(title="tabel 1. hubungan antara impor dan PDB",
       x="Produk Domestik Bruto, current US$ million",
       y="Nilai impor, current US$ million",
       caption = "sumber: World Development Indicators, World Bank") +
  theme_classic()
```


## Size & color

- Anda bisa mewarnai dan ganti size di geom_point

```{r}
#| echo: true
ggplot(data=dat,aes(x=PDB,y=import)) +
  geom_point(color="red",size=2) + # setiap nambah command, selalu kasih tanda +
  labs(title="tabel 1. hubungan antara impor dan PDB",
       x="Produk Domestik Bruto, current US$ million",
       y="Nilai impor, current US$ million",
       caption = "sumber: World Development Indicators, World Bank") +
  theme_classic()
```

## Time Series

- setelah scatterplot, kita akan coba line graph.

- Line graph biasanya digunakan untuk data time series atau panel.

    - pengguna ggplot harus menggunakan format data "long".

    - kolom waktu harus menggunakan tipe "tss" atau datetime.

## Datetime

- Format long dan wide dibahas di pertemuan 7.

- Untuk datetime, anda harus memastikan variable waktu (tahun, bulan, dll) harus dalam bentuk tss.

- Kadang-kadang saat kita pakai `read_excel()` atau `read_csv()`, R tidak membaca kolom waktu sebagai "tss", tapi malah sebagai "chr" (karakter) atau bahkan numerik (dbl, fl64, dst)

- Jika bentuknya "chr", harus kita ubah ke "tss" dengan `as.Date()`

## Datetime

```{r}
#| echo: true
library(readxl)
dat<-read_excel("latihan7.xlsx")
dat$year<-as.Date(dat$year,format="%Y") # mengubah year dari chr ke tss
```

- Di latihan7.xlsx, kolom "year" bentuknya adalah "chr". Dengan `as.Date()`, kita mengubah kolom "year" dari "chr" jadi "tss".

- sub-command "format" memberitau kita bahwa year itu merupakan tahun.

## Intermezzo: chr vs ts

::: panel-tabset

### Tanpa as.Date

```{r}
#| echo: true
read_excel("latihan7.xlsx")
```

### Dengan as.Date

```{r}
#| echo: true
dat<-read_excel("latihan7.xlsx")
dat$year<-as.Date(dat$year,"%Y") # mengubah year dari chr ke tss
dat
```

:::

## Format time series

| bentuk | format |
| ----- | ----- |
| 2020 | "%Y" |
| 2020-01-01 | "%Y-%m-%d" |
| 2020/01/01 | "%Y/%m/%d" |
| 10 Jan 2020 | "%d %b %Y" |

Lengkapnya, cek di [sini](https://www.r-bloggers.com/2013/08/date-formats-in-r/) atau di [sini](https://www.stat.berkeley.edu/~s133/dates.html)

## Line graph

- Sumbu x dari line graph hampir pasti variabel waktu.

- Sangat tidak disarankan ngeplot multiple indicators in one line.

- Tapi, 1 indikator dan ngeplot berbagai negara biasanya bisa-bisa aja dilakukan di line graph.

- syntaxnya mirip dengan scatter, dengan beberapa twist.

## Line graph

```{r}
#| echo: true
ggplot(data=dat,aes(x=year,y=PDBperkapita)) +
  geom_line() # Kita tidak pakai geom_point, tapi pakai geom_line
```

hasilnya jelek karena dalam 1 waktu ada lebih dari 1 data point karena ada beberapa negara

## Line graph

```{r}
#| echo: true
ggplot(data=dat,aes(x=year,y=PDBperkapita,color=country)) +
  geom_line()
```

## Line graph

- note bahwa di sub-command `aes()` ada tambahan argumen namanya "color". Color ini memberikan masing-masing garis untuk setiap kolom "country".

- Dengan argumen "color", anda akan otomatis mendapatkan legenda di sisi kanan.

- anda juga dapat menggunakan "linetype" daripada "color" jika gambarnya hitam putih.

- Note kita menggunakan `geom_line()` bukan `geom_point()`

    - apa yang terjadi kalau kita pakai 2 2 nya?

## Linetype

```{r}
#| echo: true
ggplot(data=dat,aes(x=year,y=PDBperkapita,linetype=country)) +
  geom_line()
```

Harus selalu diingat nama variabelnya, mana yang jadi x, y, dan color/linetype. Anda juga bisa pakai labs dan theme sama seperti di contoh scatterplot.

## More on ggplot

- masih ada banyak jurus-jurus di ggplot bahkan bisa buat gambar hal-hal yang bukan data.

- Tapi untuk saat ini, cukup segini dulu yang dipelajari.

- Jika anda tertarik lebih lanjut mempelajari ggplot, anda dapat gunakan google.

