install.packages("swirl")
latex
library("swirl")
swirl()
library("swirl")
Mad
swirl()
install.packages("Data_Analysis")
install.packages("Data Analysis")
inistall.packages("Exploratory Data Analysis")
install.packages("Regression Models")
install_course("Data Analysis")
install.packages("Data_Analysis")
install_course("Data_Analysis")
install_course("regression Models")
swirl()
install_course("Statistical Inference")
install_course("Regression Models")
install_course("Getting and Cleaning Data")
install_course("Exploratory Data Analysis")
install_course("Mathematical Bio Statistics Bootcamp")
install_course("Mathematical Bio Statistics Bootcamp")
install_course("R Programming Alt")
install_course("R Programming E")
swirl()
swirl()
library("swirl")
swirl()
a ,_ 1 2 3 4 5
a<-1 2 3 4 5
a -> 1 2 3 4 5
a(1)
swirl()
library("swirl")
swirl()
5+7
x<-5+7
x
y<-x-3
y
library("swirl")
swirl()
z<-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
plot(child~parent,galton)
plot(jitter(child,4))
plot(jitter(child,4)~parent,galton)
regline<-;m(child~parent,galton)
regline<-lm(child~parent,galton)
regrline<-lm(child~parent,galton)
parent
child
abline(regrline,lwd=3,col=Red)
abline(regrline,lwd=3,col='red')
summary(regrline)
cokil<-c(1,2,3,4,5,6,7,8,9,0)
titit<-c(2,3,5,7,8,9,15,20,22)
lm(cokil~titit)
summary(cokil)
titit<-c(2,3,5,7,8,9,15,20,22,25)
titit
cokit<-lm(cokil~titit)
summary(cokit)
library(readxl)
regresi_linear <- read_excel("C:/Users/DELL/Downloads/regresi linear.xlsx")
View(regresi_linear)
pengunjung
a
pengunjung<-30
29
2
32
31
3
32
30
4
33
31
5
33
32
6
34
32
7
34
31
8
34
30
9
34
30
10
34
32
11
35
32
12
36
30
13
36
32
14
36
34
15
37
33
16
37
34
17
37
32
18
38
36
19
38
34
20
39
36
21
39
35
22
40
38
23
40
35
24
40
33
25
40
37
26
40
36
27
41
37
28
42
36
29
42
35
30
42
38
pengunjung
library("swirl")
swirl()
q()
library("swirl")
mad
swirl()
swirl
library("swirl")
bye()
install.packages("car")
library("car")
quit()
help(lp)
??lp
??lr
lp()
library(swirl)
swirl()
cor
bye()
swirl()
swirl()
plot(child ~ parent, galton)
quit()
install.packages("micEconIndex")
library("priceIndex")
install.packages("priceIndex")
priceIndex
library("micEconIndex")
priceIndex(10)
priceIndex(10,20)
library(readxl)
data_BTKI_2017 <- read_excel("C:/Users/DELL/Downloads/data-BTKI-2017.xlsx",
col_types = c("numeric", "text", "text",
"text", "text"))
View(data_BTKI_2017)
install.packages("installr")
library("installr")
library(installr)
updateR()
read.csv("C:\Users\DELL\OneDrive - Australian National University\ANU Skul\STAT\Stat Assignment 2")
read.csv("C:\ice_cream1.csv")
read.csv("C:/ice_cream1.csv")
a<-read.csv("C:/ice_cream1.csv")
rating2<-factor("rating")
rating2
rating
rating2<-factor(rating)
rating2<-factor(a$rating)
rating2
b<-lm(fat~rating2)
b<-lm(a$fat~rating2)
summary(b)
c<-lm(a$fat~a$rating)
summary(c)
a
install.packages("micEconCES")
library("micEconCES")
set.seed(123)
cesData <- data.frame(x1 = rchisq(200, 10), x2 = rchisq(200,
+ 10), x3 = rchisq(200, 10), x4 = rchisq(200, 10))
cesData$y2 <- cesCalc(xNames = c("x1", "x2"), data = cesData,
+ coef = c(gamma = 1, delta = 0.6, rho = 0.5, nu = 1.1))
cesData$y2 <- cesData$y2 + 2.5 * rnorm(200)
cesData$y3 <- cesCalc(xNames = c("x1", "x2", "x3"), data = cesData,
+ coef = c(gamma = 1, delta_1 = 0.7, delta = 0.6, rho_1 = 0.3,
+ rho = 0.5, nu = 1.1), nested = TRUE)
cesData$y3 <- cesData$y3 + 1.5 * rnorm(200)
cesData$y4 <- cesCalc(xNames = c("x1", "x2", "x3", "x4"), data = cesData,
+ coef = c(gamma = 1, delta_1 = 0.7, delta_2 = 0.6, delta = 0.5,
+ rho_1 = 0.3, rho_2 = 0.4, rho = 0.5, nu = 1.1), nested = TRUE)
cesData$y4 <- cesData$y4 + 1.5 * rnorm(200)
View(cesData)
library("micEconCES")
cesData$y2 <- cesCalc(xNames = c("x1", "x2"), data = cesData,
+ coef = c(gamma = 1, delta = 0.6, rho = 0.5, nu = 1.1))
cesData$y2 <- cesData$y2 + 2.5 * rnorm(200)
cesData$y3 <- cesCalc(xNames = c("x1", "x2", "x3"), data = cesData,
+ coef = c(gamma = 1, delta_1 = 0.7, delta = 0.6, rho_1 = 0.3,
+ rho = 0.5, nu = 1.1), nested = TRUE)
cesData$y3 <- cesData$y3 + 1.5 * rnorm(200)
cesData$y4 <- cesCalc(xNames = c("x1", "x2", "x3", "x4"), data = cesData,
+ coef = c(gamma = 1, delta_1 = 0.7, delta_2 = 0.6, delta = 0.5,
+ rho_1 = 0.3, rho_2 = 0.4, rho = 0.5, nu = 1.1), nested = TRUE)
cesData$y4 <- cesData$y4 + 1.5 * rnorm(200)
cesData$y2 <- cesCalc(xNames = c("x1", "x2"), data = cesData,
+ coef = c(gamma = 1, delta = 0.6, rho = 0.5, nu = 1.1))
cesData$y2 <- cesCalc(c("x1", "x2"), cesData,
+ coef = c(gamma = 1, delta = 0.6, rho = 0.5, nu = 1.1))
cesData$y2 <- cesCalc(c("x1", "x2"), cesData,
+ coef(c(gamma = 1, delta = 0.6, rho = 0.5, nu = 1.1))
a
View(cesData)
cesData$y2 <- cesCalc(xNames = c("x1", "x2"), data = cesData,
+ coef = c(gamma = 1, delta = 0.6, rho = 0.5, nu = 1.1))
cesData$y2 <- cesCalc(c("x1", "x2"), cesData,
coef = c(gamma = 1, delta = 0.6, rho = 0.5, nu = 1.1))
View(cesData)
cesData$y2 <- cesData$y2 + 2.5 * rnorm(200)
cesData$y3 <- cesCalc(c("x1", "x2", "x3"), cesData,
coef = c(gamma = 1, delta_1 = 0.7, delta = 0.6, rho_1 = 0.3,
rho = 0.5, nu = 1.1), nested = TRUE)
cesData$y3 <- cesData$y3 + 1.5 * rnorm(200)
cesData$y4 <- cesCalc(xNames = c("x1", "x2", "x3", "x4"), data = cesData,
coef = c(gamma = 1, delta_1 = 0.7, delta_2 = 0.6, delta = 0.5,
rho_1 = 0.3, rho_2 = 0.4, rho = 0.5, nu = 1.1), nested = TRUE)
cesData$y4 <- cesData$y4 + 1.5 * rnorm(200)
cesNls <- nls(y2 ~ gamma * (delta * x1^(-rho) + (1 - delta) * x2^(-rho))^(-phi/rho),
data = cesData, start = c(gamma = 0.5, delta = 0.5, rho = 0.25, phi = 1))
print(cesNls)
cesNls1 <- nls(y2 ~ gamma * (delta1 * x1^(-rho) + delta2 * x2^(-rho) + (1 - delta1 - delta2) * x2^(-rho))^(-phi/rho),
data = cesData, start = c(gamma = 0.5, delta1 = 0.33, delta2 = 0.33, rho = 0.25, phi = 1))
print(cesNls1)
cesNls1 <- nls(y2 ~ gamma * (delta1 * x1^(-rho) + delta2 * x2^(-rho) + (1 - delta1 - delta2) * x2^(-rho))^(-phi/rho),
data = cesData, start = c(gamma = 0.5, delta1 = 0.4, delta2 = 0.4, rho = 0.25, phi = 1))
print(cesNls1)
getwd()
remotes::install_github('rstudio/blogdown')
install.packages('remotes')
library(remotes)
remotes::install_github('rstudio/blogdown')
remotes::install_github('rstudio/blogdown')
install.packages(c("backports", "cpp11", "dbplyr", "testthat", "tinytex"))
remotes::install_github('rstudio/blogdown')
help(blogdown)
??blogdown
version
setwd('c:/github/krisna')
# Loading and cleaning the data
library(dplyr)
library(tidyverse)
library(lubridate)
library(ggplot2)
library(hrbrthemes)
expor<-read.csv('Book1.csv') # read the data
a<-colnames(expor)           # add column names to a for easy rename
expor<-expor %>%             # rename variable names
rename(hs=a[1],deskripsi=a[2],tujuan=a[3],periode=a[4],kg=a[5],usd=a[6])
# make periode into time series
expor$periode<-as.Date(paste0(as.character(expor$periode), '01'),format='%Y%m%d')
# Make aggregation to all countries
exporall<-expor %>% group_by(hs,periode) %>% summarise((expor=sum(usd)))
a<-colnames(exporall)
exporall<-exporall %>% rename(usd=a[3])
# Make aggregation on WCO goods classification
wco<-read.csv('wco.csv') # adding wco classification
wco<-wco %>% distinct(hshs, .keep_all = TRUE) # drop duplicates
wco$hshs<-as.character(wco$hshs) #make hshs a string so i can join them
exporall$hshs<-substr(as.character(exporall$hs),start=1,stop=6) # taking the first 6 digits
final<-inner_join(exporall,wco,by="hshs")
finall<-final %>% group_by(desc,periode) %>% summarise(expor=sum(usd))
a<-colnames(finall)
finall<-finall %>% rename(usd=a[3])
finall$usd6<-finall$usd/1000000
# plot
ggplot(finall,aes(x=periode,y=usd6, color=desc)) +
geom_line(aes(linetype=desc),size=1.1) +
scale_x_date(date_labels="%b-%y",date_breaks = "2 month")+
# theme_ipsum() +
# theme(axis.text.x=element_text(angle=60, hjust=1)) +
geom_vline(xintercept=as.Date('20200301',format='%Y%m%d')) +
labs(x='tahun',y="Million USD",title="Indonesia's export of COVID-19 related goods",subtitle="BPS,Compiled by Pusdatin Kemenperin")
ggsave("exportcovid.png")
expor<-read.csv('Book1.csv')
setwd("c:/github/krisna/content/en/post/covtradenew")
twd("c:/github/krisna/content/en/post/covtradenew")
expor<-read.csv('Book1.csv') # read the data
a<-colnames(expor)           # add column names to a for easy rename
expor<-expor %>%             # rename variable names
rename(hs=a[1],deskripsi=a[2],tujuan=a[3],periode=a[4],kg=a[5],usd=a[6])
# make periode into time series
expor$periode<-as.Date(paste0(as.character(expor$periode), '01'),format='%Y%m%d')
# Make aggregation to all countries
exporall<-expor %>% group_by(hs,periode) %>% summarise((expor=sum(usd)))
a<-colnames(exporall)
exporall<-exporall %>% rename(usd=a[3])
# Make aggregation on WCO goods classification
wco<-read.csv('wco.csv') # adding wco classification
wco<-wco %>% distinct(hshs, .keep_all = TRUE) # drop duplicates
wco$hshs<-as.character(wco$hshs) #make hshs a string so i can join them
exporall$hshs<-substr(as.character(exporall$hs),start=1,stop=6) # taking the first 6 digits
final<-inner_join(exporall,wco,by="hshs")
finall<-final %>% group_by(desc,periode) %>% summarise(expor=sum(usd))
a<-colnames(finall)
finall<-finall %>% rename(usd=a[3])
finall$usd6<-finall$usd/1000000
# plot
ggplot(finall,aes(x=periode,y=usd6, color=desc)) +
geom_line(aes(linetype=desc),size=1.1) +
scale_x_date(date_labels="%b-%y",date_breaks = "2 month")+
# theme_ipsum() +
# theme(axis.text.x=element_text(angle=60, hjust=1)) +
geom_vline(xintercept=as.Date('20200301',format='%Y%m%d')) +
labs(x='tahun',y="Million USD",title="Indonesia's export of COVID-19 related goods",subtitle="BPS,Compiled by Pusdatin Kemenperin")
ggsave("exportcovid.png")
