---
# Documentation: https://wowchemy.com/docs/managing-content/

title: "Hitektrade"
subtitle: ""
summary: ""
authors: []
tags: []
categories: []
date: 2020-11-11T21:17:11+11:00
lastmod: 2020-11-11T21:17:11+11:00
featured: false
draft: true

# Featured image
# To use, add an image named `featured.jpg/png` to your page's folder.
# Focal points: Smart, Center, TopLeft, Top, TopRight, Left, Right, BottomLeft, Bottom, BottomRight.
image:
  caption: ""
  focal_point: ""
  preview_only: false

# Projects (optional).
#   Associate this post with one or more of your projects.
#   Simply enter your project's folder or file name without extension.
#   E.g. `projects = ["internal-project"]` references `content/project/deep-learning/index.md`.
#   Otherwise, set `projects = []`.
projects: []
---


```python
from IPython.display import HTML
HTML('''<script>
code_show=true; 
function code_toggle() {
 if (code_show){
 $('div.input').hide();
 } else {
 $('div.input').show();
 }
 code_show = !code_show
} 
$( document ).ready(code_toggle);
</script>
Saya rasa sudah banyak posting yang menunjukkan kode python saya. 
Kali ini kodenya saya hide aja biar pendek postnya. Jika pengen lihat,
klik <a href="javascript:code_toggle()">sini aja</a>.''')
```




<script>
code_show=true; 
function code_toggle() {
 if (code_show){
 $('div.input').hide();
 } else {
 $('div.input').show();
 }
 code_show = !code_show
} 
$( document ).ready(code_toggle);
</script>
Saya rasa sudah banyak posting yang menunjukkan kode python saya. 
Kali ini kodenya saya hide aja biar pendek postnya. Jika pengen lihat,
klik <a href="javascript:code_toggle()">sini aja</a>.




```python
import wbdata as wb
import pandas as pd
import datetime
import seaborn as sns; sns.set()
import matplotlib.pyplot as plt
```


```python
tanggal=(datetime.datetime(1970,1,1), datetime.datetime(2019,1,1))
a=wb.get_dataframe({"BX.KLT.DINV.WD.GD.ZS" : "FDI net inflows, % of GDP"}, country=["IDN"], data_date=tanggal, convert_date=True, keep_levels=True)
a=a.reset_index()
b=wb.get_dataframe({"TX.MNF.TECH.ZS.UN" : "High-tech export"}, country=["IDN"], data_date=tanggal, convert_date=True, keep_levels=True)
b=b.reset_index()
c=wb.get_dataframe({"SL.EMP.TOTL.SP.NE.ZS" : "Employment-to-population ratio, right"}, country=["IDN"], data_date=tanggal, convert_date=True, keep_levels=True)
c=c.reset_index()
d=wb.get_dataframe({"SL.UEM.TOTL.NE.ZS" : "Employment-to-population ratio, right"}, country=["IDN"], data_date=tanggal, convert_date=True, keep_levels=True)
d=d.reset_index()
plt.figure(figsize=(7,5))
graph1=sns.lineplot(x="date", y="FDI net inflows, % of GDP",data=a)
graph1.axhline(0, color='black')
graph1.axvline(datetime.datetime(1978,1,1), color='red')
graph1.text(datetime.datetime(1979,1,1),-2.7, "Malari incident",color='brown',size='large')
graph1.text(datetime.datetime(1970,1,1),-0.5, "US/mining",color='brown',size='large')
graph1.text(datetime.datetime(1970,1,1),-1, "dominates",color='brown',size='large')
graph1.axvline(datetime.datetime(1983,1,1), color='red')
graph1.text(datetime.datetime(1984,1,1),-0.5, "Asian/manufacturing",color='brown',size='large')
graph1.text(datetime.datetime(1984,1,1),-1, "dominated FDI",color='brown',size='large')
graph1.axvline(datetime.datetime(2001,1,1), color='red')
graph1.text(datetime.datetime(2002,1,1),4.1, "Reformasi and",color='brown',size='large')
graph1.text(datetime.datetime(2002,1,1),3.7, "decentralisation",color='brown',size='large')
plt.show()
```


![png](output_3_0.png)



```python
wb.search_indicators('high-tech',source=2)
```




    id                 name
    -----------------  ------------------------------------------------------------------------------------
    NV.MNF.TECH.ZS.UN  Medium and high-tech Industry (including construction) (% manufacturing value added)
    TX.MNF.TECH.ZS.UN  Medium and high-tech exports (% manufactured exports)
    TX.VAL.TECH.CD     High-technology exports (current US$)
    TX.VAL.TECH.MF.ZS  High-technology exports (% of manufactured exports)




```python
tanggul=(datetime.datetime(1990,1,1), datetime.datetime(2019,1,1))
p=wb.get_dataframe({"TX.MNF.TECH.ZS.UN" : "Medium and high-tech Industry (including construction) (% manufacturing value added)"}, country=["IDN"], data_date=tanggul, convert_date=True, keep_levels=True)
p=p.reset_index()
ax = a.plot(x="date", y="FDI net inflows, % of GDP", legend=False)
ax2 = ax.twinx()
p.plot(x="date", y="Medium and high-tech Industry (including construction) (% manufacturing value added)", ax=ax2, legend=False, color="r")
ax.figure.legend()
plt.show()
```


![png](output_5_0.png)



```python
import pandas as pd
pd.set_option('max_rows', None)
import pandas as pd
import datetime
import seaborn as sns; sns.set()
import matplotlib.pyplot as plt
aa=pd.read_csv("pma.csv")
aa=aa.fillna(0) # replace NaN with zero
b=list(aa.columns.values)
del b[0]
aa=aa.melt(id_vars='PMA',value_vars=b) # melt so time columns become 1 columns only
aa=aa.rename(columns={"variable" : "year", "value" : "kUSD"})
aa['year']=pd.to_datetime(aa['year']) # change variable to time variable
aa=aa.loc[aa['year'] > datetime.datetime(2004,1,1)]
z=aa.PMA.unique() # bikin list buat jenis PMA
aa=aa.set_index('PMA')
b=aa.loc[[z[27],z[54]]]
elektronik=aa.loc[z[27]]
elektronik=elektronik.rename(columns={'kUSD' : 'electronics (right)'})
it=aa.loc[z[54]]
it=it.rename(columns={'kUSD' : 'software (left)'})
itu=aa.loc[z[55]]
itu=itu.rename(columns={'kUSD' : 'web based (right)'})
b=b.reset_index()
plt.figure(figsize=(7,5))
ax = it.plot(x="year", y="software (left)", legend=False)
ax2 = ax.twinx()
elektronik.plot(x="year", y="electronics (right)", ax=ax2, legend=False, color="r")
itu.plot(x="year", y="web based (right)", ax=ax2, legend=False, color="orange")
ax.axvline(datetime.datetime(2016,1,1), color='black')
ax.text(datetime.datetime(2013,1,1),30000, "LCR",color='brown',size='x-large')
ax.figure.legend(loc=9)
plt.show()
```


    <Figure size 504x360 with 0 Axes>



![png](output_6_1.png)



```python
wb.search_indicators('industrial production',source=15)
```




    id         name
    ---------  -----------------------------------------------
    IPTOTNSKD  Industrial Production, constant US$
    IPTOTSAKD  Industrial Production, constant US$, seas. adj.




```python
#a=a.set_index('PMA')
c=aa.loc[[z[25],z[8]]]
c=c.reset_index()
logam=aa.loc[z[25]]
tambang=aa.loc[z[8]]
plt.figure(figsize=(7,5))
fak=sns.lineplot(x="year", y="kUSD",data=c, hue="PMA")
fak.axvline(datetime.datetime(2014,1,1), color='red')
fak.text(datetime.datetime(2010,1,1),3000000, "Export ban",color='brown',size='x-large')
fak.axvline(datetime.datetime(2017,1,1), color='green')
fak.text(datetime.datetime(2017,1,1),300000, "Relaxed",color='green',size='x-large')
```




    Text(2017-01-01 00:00:00, 300000, 'Relaxed')




![png](output_8_1.png)



```python
import numpy as np
tanggul=(datetime.datetime(2000,1,1), datetime.datetime(2019,1,1))
aaa=wb.get_dataframe({"BX.KLT.DINV.WD.GD.ZS" : "FDI net inflows, % of GDP"}, country=["IDN"], data_date=tanggul, convert_date=True, keep_levels=True)
aaa=aaa.reset_index()
ip=wb.get_dataframe({"IPTOTSAKD" : "in"}, country=['IDN'], data_date=tanggul, convert_date=True, keep_levels=True)
ip=ip.reset_index()
ip['lin']=np.log(ip['in'])
ip=ip.sort_values(by='date')
ip['growth']=ip.lin.diff()*100
ip
ax = aaa.plot(x="date", y="FDI net inflows, % of GDP", legend=False)
ax2 = ax.twinx()
ip.plot(x="date", y="growth", ax=ax2, legend=False, color="r")
ax.figure.legend()
plt.show
```




    <function matplotlib.pyplot.show(*args, **kw)>




![png](output_9_1.png)

